<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member" >

  <!-- 권한 확인 -->
  <select id="loginCheck" parameterType="mDto"  resultType="String">
    select authority from member 
    where userid=#{userid} and passwd=#{passwd}
  </select>
  
  <!-- 비밀번호 체크 -->
  <select id="passwdCheck" parameterType="String" resultType="String">
  	select passwd from member
  	where userid=#{userid}
  </select>
  
  <!-- 아이디 찾기 -->
  <select id="remindID" parameterType="mDto" resultType="String">
  	select userid from member
  	where name=#{name} and phone=#{phone}
  </select>
  
  <!-- 비밀번호 찾기 -->
  <select id="remindPwd" parameterType="mDto" resultType="String">
  	select passwd from member
  	where userid=#{userid} and email=#{email}
  </select>
  
  
  <!-- 멤버 리스트 -->
  <select id="getMemberList"  parameterType="HashMap"  resultType="mDto">
  	select * 
  	from (
  		select A.*, rownum as rn
  		from (
  			select * from member 
  			where authority=#{authority} and ${searchkey} like #{keyword}
  			order by ${order}
  			<if test="order == 'join_date'">desc</if>
  			<if test="order == 'name'">asc</if>
  			 ) A
  	) where rn between #{start} and #{end}
  </select> 
  
  <!-- 멤버 갯수 -->
  <select id="getMemberCount" resultType="int">
    select count(*) from member
    where authority=#{authority} and ${searchkey} like #{keyword}
  </select>
  
  <!-- 아이디 중복 체크 -->
  <select id="useridCheck" parameterType="String" resultType="String">
  	select userid from member
  	where userid=#{userid}
  </select>
  
  <!-- 회원가입 -->
  <insert id="join" parameterType="mDto">
    insert into member(m_idx, userid, passwd, name, email, phone, profile_img, consent, privacy, authority)
    values(
    (select nvl(max(m_idx)+1,1) from member),
    #{userid}, #{passwd}, #{name}, #{email},
    #{phone}, #{profile_img}, #{consent}, #{privacy}, #{authority})
  </insert>
  
  <!-- 비밀번호 재설정 -->
  <update id="updatePasswd" parameterType="mDto">
    update member set passwd=#{passwd}
    where userid=#{userid}
  </update>
  
  <!-- 회원정보 조회 -->
  <select id="detailVeiw" parameterType="int" resultType="mDto">
  	select * from member 
  	where m_idx=#{m_idx}
  </select>
  
  <!-- 첨부파일 이름 찾기 -->
  <select id="getProfileImg" parameterType="int" resultType="String">
  	select profile_img from member
  	where m_idx=#{m_idx}
  </select>
  
  <!-- 회원정보 업데이트 -->
  <update id="updateMember" parameterType="mDto">
  	update member
  	set passwd=#{passwd}, name=#{name}
  	, email=#{email}, phone=#{phone}
  	, profile_img=#{profile_img}
  	where m_idx=#{m_idx}
  </update>
  
  <!-- 회원정보 삭제 -->
  <delete id="deleteMember" parameterType="int">
  	delete from member
  	where m_idx=#{m_idx}
  </delete>
  
  
</mapper>

