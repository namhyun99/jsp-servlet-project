<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="service">
  <!-- 컨텐츠 리스트 -->
  <select id="getContentsList" parameterType="map" resultType="cDto">
   select c.c_idx, 
  		c.subject, 
  		c.m_idx,
  		c.cate_no,
  		c.content,
  		m.userid,
  		m.profile_img,
  		c.view_cnt, 
  		c.show,
  		c.filename,
  		c.filesize,
  		c.write_date,
  		c.update_date,
  		(select count(*) from contents_comment where c_idx= c.c_idx)cmt_count,
  		(select cate_name from category where cate_no=c.cate_no)cate_name 
  		from contents c join member m on c.m_idx = m.m_idx
  	order by ${order} desc
  </select> 
  
  <!-- 컨텐츠 갯수 -->
  <select id="getContentsCount" parameterType="map" resultType="int">
    select count(*) from contents
  </select>
  
  <!-- 권한 확인 -->
  <select id="loginCheck" parameterType="map"  resultType="mDto">
    select * from member 
    where userid=#{userid} and passwd=#{passwd}
  </select>
  
  <!-- 비밀번호 체크 -->
  <select id="passwdCheck" parameterType="String" resultType="String">
  	select passwd from member
  	where userid=#{userid}
  </select>

  <!-- 아이디 찾기 -->
  <select id="remindID" parameterType="mDto" resultType="String">
  	select userid from member
  	where name=#{name} and phone=#{phone}
  </select>
  
  <!-- 비밀번호 찾기 -->
  <select id="remindPwd" parameterType="mDto" resultType="String">
  	select passwd from member
  	where userid=#{userid} and email=#{email}
  </select>
  
  <!-- 비밀번호 재설정 -->
  <update id="updatePasswd" parameterType="mDto">
    update member set passwd=#{passwd}
    where userid=#{userid}
  </update>
  
   <!-- 회원가입 -->
  <insert id="insertMember" parameterType="mDto">
    insert into member(m_idx, userid, passwd, name, email, phone, profile_img, consent, privacy, authority)
    values(
    (select nvl(max(m_idx)+1,1) from member),
    #{userid}, #{passwd}, #{name}, #{email},
    #{phone}, #{profile_img}, #{consent}, #{privacy}, #{authority})
  </insert>
  
  
  <!-- 컨텐츠 게시글 상세 조회 -->
  <select id="getDetailContentsView" parameterType="int" resultType="cDto">
  	select  
        c.c_idx, 
        c.cate_no,
  		c.subject, 
        c.content,
  		m.userid, 
  		c.view_cnt, 
  		c.write_date,
  		c.update_date,
  		c.show,
        c.filename,
        c.filesize,
        c.m_idx,
        (select count(*) from contents_comment where c_idx= c.c_idx)cmt_count,
        (select cate_name from category where cate_no=c.cate_no)cate_name   
    from contents c join member m
    on c.m_idx = m.m_idx
  	where c_idx=#{c_idx}
  </select>
  
  <!-- 댓글 리스트 조회 -->
  <select id="getCommentList" parameterType="int" resultType="cmtDto">
    select 
      cc.cmt_idx,
      cc.c_idx,
      cc.writer,
      cc.content,
      cc.write_date,
      m.userid,
      m.profile_img
      from contents_comment cc left join member m 
      on cc.writer = m.userid where c_idx=#{c_idx}
  </select>
  
  <!-- 댓글 추가 작성 -->
  <insert id="addComment" parameterType="cmtDto">
  	insert into contents_comment(cmt_idx, c_idx, writer, content)
  	values(contents_comment_seq.nextval, #{c_idx}, #{writer}, #{content})  
  </insert>
  
  <!-- 댓글 삭제 하기 -->
  <delete id="deleteComment" parameterType="int">
  	delete from contents_comment
  	where cmt_idx=#{cmt_idx}
  </delete>
  
</mapper>

